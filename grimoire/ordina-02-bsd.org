
#+STARTUP: showall

#+TITLE: Eclats de vers : Ordina 02 : BSD
#+AUTHOR: chimay
#+EMAIL: or du val chez gé courriel commercial
#+LANGUAGE: fr
#+LINK_HOME: file:../index.html
#+LINK_UP: file:index.html
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../style/defaut.css" />

#+OPTIONS: H:6
#+OPTIONS: toc:nil

#+TAGS: noexport(n)

[[file:index.org][Index des Grimoires]]

#+INCLUDE: "../include/navigan-1.org"

#+TOC: headlines 1

* FreeBSD

** Noyau (kernel)

*** Combinaison magique

Ctrl-Alt-Esc puis

#+begin_center
call boot(0)
ou
panic
#+end_center

nécessite noyau compilé avec KDB et DDB

** Système de base (world)

| Commande        | Interface | Fonction                                        |
|-----------------+-----------+-------------------------------------------------|
| bsdinstall      | TUI       | installation                                    |
| bsdconfig       | TUI       | configuration                                   |
| freebsd-version | CLI       | version du système                              |
| freebsd-update  | CLI       | mise à jour kernel & world                      |

*** Système de fichiers

| Commande | Interface | Fonction                                                      |
|----------+-----------+---------------------------------------------------------------|
| gpart    | CLI       | partitionnement du disque                                     |
| zpool    | CLI       | création de piscine zfs                                       |
| zfs      | CLI       | gestion du système de fichier zfs                             |
| mdconfig | CLI       | Création de périphériques virtuels associés à un fichier      |
| glabel   | CLI       | Permet de donner un nom persistant à un périphérique amovible |
| gmirror  | CLI       | Création d'une association de périphériques redondant         |
| geli     | CLI       | Permet de chiffrer un système de fichier                      |
| gshsec   | CLI       | Permet de partager la clef permettant de déchiffrer           |
|          |           | un système de fichier sur plusieurs périphériques             |

*** Environnement de démarrage (boot environment)

Disponibles avec ZFS comme système de fichier.

| Commande | Interface | Fonction                               |
|----------+-----------+----------------------------------------|
| beadm    | CLI       | gestion des environnement de démarrage |
| bectl    | CLI       | gestion des environnement de démarrage |

*** Démarrage & services

| Commande           | Interface | Fonction                                          |
|--------------------+-----------+---------------------------------------------------|
| /boot/loader.conf  | FILE      | fichier de configuration du chargeur de démarrage |
| /sbin/init         | FILE      | processus de démarrage lancé par le noyau         |
| /etc/rc            | FILE      | script de démarrage                               |
| /etc/rc.conf       | FILE      | configuration du démarrage                        |
| /etc/rc.conf.local | FILE      |                                                   |
| /etc/rc.d          | DIR       | répertoire contenant les scripts permettant       |
|                    |           | de lancer ou d'arrêter des services               |
| sysrc              | CLI       | gestion des variables de /etc/rc.conf :           |
|                    |           | pour le démarrage : activation de services, ...   |
| service            | CLI       | gestion des services                              |
| rcorder            | CLI       | gestion des dépendances entre services            |

*** Noyau (kernel)

| Commande         | Interface | Fonction                             |
|------------------+-----------+--------------------------------------|
| kldstat          | CLI       | affiche la liste des modules chargés |
| kldload          | CLI       | charge un module du noyau            |
| kldunload        | CLI       | décharge un module                   |
| sysctl           | CLI       | contrôle des paramètres du noyau     |
| /etc/sysctl.conf | FILE      | Fichier de configuration de /sysctl/ |

*** Matériel

| Commande  | Interface | Fonction          |
|-----------+-----------+-------------------|
| usbconfig | CLI       | configuration usb |

*** Utilisateurs & groupes

| Commande | Interface | Fonction                                |
|----------+-----------+-----------------------------------------|
| pw       | CLI       | gestion des utilisateurs & groupes      |
| adduser  | CLI       | ajoute un utilisateur                   |
| rmuser   | CLI       | supprime un utilisateur                 |
| chpass   | CLI       | modifie les paramètres d’un utilisateur |
| passwd   | CLI       | changement du mot de passe              |
| cap_mkdb | CLI       | base de données des capacités           |

*** Paquets

| Commande   | Interface | Fonction                |
|------------+-----------+-------------------------|
| pkg-static | CLI       | gestionnaire de paquets |
| portmaster | CLI       | gestionnaire des ports  |

*** Processus

| Commande | Interface | Fonction                        |
|----------+-----------+---------------------------------|
| pkill    | CLI       | envoie un signal à un processus |

*** Audio

| Commande | Interface | Fonction     |
|----------+-----------+--------------|
| mixer    | CLI       | mixer de son |

*** Mode console virtuelle

(Ctrl +) Alt + F1

| Commande   | Interface | Fonction               |
|------------+-----------+------------------------|
| kbdmap     |           | disposition du clavier |
| vidcontrol |           | vidéo                  |
| vidfont    |           | fonte de caractères    |

*** Réseau

**** Wifi

| Commande       | Interface | Fonction                               |
|----------------+-----------+----------------------------------------|
| ifconfig       | CLI       | configuration des interfaces réseau    |
| wpa_passphrase | CLI       | demander le mot de passe et générer    |
|                |           | le contenu de /etc/wpa_supplicant.conf |

**** Pare-feu

| Commande     | Interface | Fonction                                  |
|--------------+-----------+-------------------------------------------|
| pf           | CLI       | pare-feu                                  |
| /etc/pf.conf | FILE      | Fichier de configuration du pare-feu /pf/ |
| pfctl        | CLI       | contrôle du pare-feu                      |
| ipfw         | CLI       | contrôle du pare-feu                      |

Voici quelques exemples de syntaxe pf. Définition de variables,
interface et réseau local :

#+BEGIN_EXAMPLE
if="rl0" <br />
lan="{ 192.168.123.100, 192.168.123.101, 192.168.123.102 }"
#+END_EXAMPLE

Bloque tout, journalise tout :

#+BEGIN_EXAMPLE
block in log all
#+END_EXAMPLE

Laisse passer ssh des autres membre du réseau local :

#+BEGIN_EXAMPLE
pass in inet proto tcp from $lan to $if port ssh flags S/SA keep state <br />
pass in inet proto udp from $lan to $if port ssh flags S/SA keep state
#+END_EXAMPLE

** Systeme

#+TOC: headlines 1 local

*** Mise à jour par compilation

Il faut se rendre dans le répertoire des sources du système,
par exemple :

#+BEGIN_EXAMPLE
cd /usr/src
#+END_EXAMPLE

sous FreeBsd. On dispose ensuite des commandes :

| make buildworld    | Compile le système d'exploitation           |
| make buildkernel   | Compile le noyau du système d'exploitation  |
| make installkernel | Installe le noyau du système d'exploitation |

On redémarre en mode mono-utilisateur et on lance successivement
les commandes :

#+BEGIN_EXAMPLE
adjkerntz -i
mount -a -t ufs
mergemaster -p
make installworld
mergemaster
reboot
#+END_EXAMPLE

*** Fichiers de configuration

Pour installer les fichiers de configuration, il faut aller dans :

#+BEGIN_EXAMPLE
cd /usr/src/etc
#+END_EXAMPLE

et lancer :

#+BEGIN_EXAMPLE
make distribution
#+END_EXAMPLE

*** Cloisonnement

| Commande       | Fonction                                      |
|----------------+-----------------------------------------------|
| jail           | permet d'emprisonner un processus             |
|                | dans un sous-système                          |
| /etc/rc.d/jail |                                               |
| jexec          | permet d'exécuter un processus dans un /jail/ |
| jls            | liste des jails                               |

** Paquets

#+TOC: headlines 1 local

*** Compilés


| Commande | Interface | Fonction                |
|----------+-----------+-------------------------|
| pkg      | CLI       | gestionnaire de paquets |

*** Sources : ports

Les ports constituent une arborescence d'instructions nécessaires
à la compilation, l'installation ou la désinstallation de logiciels.
Pour utiliser les ports, il faut d'abord se rendre dans le répertoire
associé au logiciel souhaité. Il s'agit de :

#+BEGIN_EXAMPLE
cd /usr/ports/catégorie/logiciel
#+END_EXAMPLE

On utilise alors la commande « make » suivi de l'action souhaitée :

| make config  | Configuration des options de compilation |
| make install | Installe                                 |
| make clean   | Nettoie le répertoire                    |

**** Options de compilation

| /etc/make.conf|Fichier de configuration des compilations de port|

**** Recherche

La racine des ports permet de rechercher un logiciel :

cd /usr/ports <br />
make search key=<span class="rouge">motclef</span>

**** Utilitaires

| portsnap       | Installation ou mise à jour de l’arbre des ports |
| portsearch     | Recherche dans l’arbre des ports                 |
| portupgrade    | Mise à jour                                      |
| portinstall    | Installation d'un port                           |
| portversion    | Ports non à jour                                 |
| port_deinstall | Suppression                                      |
| portsclean     | Nettoyage                                        |
| portaudit      | Mise à jour de sécurité                          |

***** Configuration

| /usr/local/etc/pkgtools.conf             | Fichier de configuration de portupgrade            |
| IGNORE_CATEGORIES=['/port1/', '/port2/'] | Catégories ignorées                                |
| HOLD_PKGS=['/port1/', '/port2/']         | Paquets non mis à jour                             |
| USE_PKGS=['/port1/', '/port2/']          | Utilisation de paquets précompilés si disponibles, |
|                                          | compilation dans le cas contraire                  |
| USE_PKGS_ONLY=['/port1/', '/port2/']     | Utilisation de paquets précompilés uniquement      |

On peut aussi définir des arguments particuliers de
compilation pour certains ports :

#+BEGIN_EXAMPLE
MAKE_ARGS={ <br />
'/port1/' => ['/.../', '/.../'],
'/port2/' => ['/.../', '/.../']
}
#+END_EXAMPLE

* NetBSD

** Paquets

*** Source : pkgsrc

Sous NetBSD, l’arborescence des ports s’appelle *pkgsrc*.

Répertoire associé à un port :

#+BEGIN_EXAMPLE
cd /usr/pkgsrc/catégorie/logiciel
#+END_EXAMPLE

*** Compilé

Le « pkgsrc » de NetBsd permet d'installer des ports précompilés
via la commande :

make bin-install

Il y a aussi l’utilitaire *pkgin*.

* OpenBSd
